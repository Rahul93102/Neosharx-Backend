# Generated by Django 5.1.7 on 2025-10-04 13:40

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("authentication", "0003_neostory"),
    ]

    operations = [
        migrations.CreateModel(
            name="SharXathon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Name of the hackathon", max_length=255),
                ),
                ("slug", models.SlugField(blank=True, max_length=255, unique=True)),
                (
                    "description",
                    models.TextField(help_text="Brief description of the hackathon"),
                ),
                (
                    "content",
                    models.TextField(help_text="Detailed content and information"),
                ),
                (
                    "location",
                    models.CharField(
                        help_text="Physical or virtual location", max_length=255
                    ),
                ),
                (
                    "is_virtual",
                    models.BooleanField(
                        default=False, help_text="Is this a virtual event?"
                    ),
                ),
                (
                    "start_datetime",
                    models.DateTimeField(help_text="When the hackathon starts"),
                ),
                (
                    "end_datetime",
                    models.DateTimeField(help_text="When the hackathon ends"),
                ),
                (
                    "registration_deadline",
                    models.DateTimeField(help_text="Last date for registration"),
                ),
                (
                    "banner_image",
                    models.URLField(blank=True, help_text="Main banner image URL"),
                ),
                ("logo_image", models.URLField(blank=True, help_text="Event logo URL")),
                (
                    "gallery_images",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text='JSON array of image URLs: ["url1", "url2", ...]',
                    ),
                ),
                (
                    "topic",
                    models.CharField(
                        help_text="Main theme/topic of hackathon", max_length=255
                    ),
                ),
                (
                    "difficulty_level",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                            ("expert", "Expert"),
                        ],
                        default="intermediate",
                        max_length=20,
                    ),
                ),
                (
                    "team_size",
                    models.CharField(
                        choices=[
                            ("individual", "Individual"),
                            ("2-3", "2-3 Members"),
                            ("4-5", "4-5 Members"),
                            ("6-8", "6-8 Members"),
                            ("any", "Any Size"),
                        ],
                        default="4-5",
                        max_length=20,
                    ),
                ),
                (
                    "max_participants",
                    models.IntegerField(
                        default=100, help_text="Maximum number of participants"
                    ),
                ),
                (
                    "current_participants",
                    models.IntegerField(
                        default=0, help_text="Current registered participants"
                    ),
                ),
                (
                    "prizes",
                    models.JSONField(
                        default=list,
                        help_text='JSON array of prizes:\n        [\n            {\n                "position": "1st Place",\n                "prize": "$5000 + Mentorship",\n                "description": "Winner gets cash prize and 3-month mentorship"\n            }\n        ]\n        ',
                    ),
                ),
                (
                    "benefits",
                    models.JSONField(
                        default=list,
                        help_text='JSON array of benefits:\n        [\n            "Free meals and snacks",\n            "Networking opportunities", \n            "Workshops and sessions",\n            "Certificate of participation"\n        ]\n        ',
                    ),
                ),
                (
                    "rules",
                    models.JSONField(
                        default=list,
                        help_text='JSON array of rules:\n        [\n            "Teams can have 2-5 members",\n            "All code must be written during the event",\n            "Use any programming language or framework",\n            "Submit project by deadline"\n        ]\n        ',
                    ),
                ),
                (
                    "requirements",
                    models.TextField(
                        blank=True, help_text="Technical requirements and prerequisites"
                    ),
                ),
                (
                    "organizer_name",
                    models.CharField(default="NeoSharX Team", max_length=255),
                ),
                (
                    "organizer_email",
                    models.EmailField(
                        blank=True,
                        help_text="Contact email for queries",
                        max_length=254,
                    ),
                ),
                (
                    "organizer_phone",
                    models.CharField(
                        blank=True, help_text="Contact phone number", max_length=20
                    ),
                ),
                (
                    "website_url",
                    models.URLField(blank=True, help_text="Official event website"),
                ),
                (
                    "registration_url",
                    models.URLField(blank=True, help_text="External registration link"),
                ),
                (
                    "discord_url",
                    models.URLField(
                        blank=True, help_text="Discord server for participants"
                    ),
                ),
                (
                    "social_links",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text='JSON object of social links:\n        {\n            "twitter": "https://twitter.com/event",\n            "linkedin": "https://linkedin.com/event", \n            "instagram": "https://instagram.com/event"\n        }\n        ',
                    ),
                ),
                (
                    "judging_criteria",
                    models.JSONField(
                        default=list,
                        help_text='JSON array of judging criteria:\n        [\n            {\n                "criteria": "Innovation",\n                "weight": "30%",\n                "description": "How innovative and creative is the solution?"\n            }\n        ]\n        ',
                    ),
                ),
                (
                    "sponsors",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text='JSON array of sponsors:\n        [\n            {\n                "name": "TechCorp",\n                "logo": "https://example.com/logo.png",\n                "tier": "Gold",\n                "website": "https://techcorp.com"\n            }\n        ]\n        ',
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("upcoming", "Upcoming"),
                            ("registration_open", "Registration Open"),
                            ("ongoing", "Ongoing"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="upcoming",
                        max_length=20,
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False, help_text="Show on homepage as featured"
                    ),
                ),
                (
                    "is_published",
                    models.BooleanField(
                        default=False, help_text="Make visible to public"
                    ),
                ),
                ("views_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "SharXathon",
                "verbose_name_plural": "SharXathons",
                "ordering": ["-start_datetime"],
            },
        ),
    ]

# Generated by Django 5.1.7 on 2025-10-07 16:15

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("authentication", "0008_comment_commentlike_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="comment",
            name="content_type",
            field=models.CharField(
                choices=[
                    ("startup_story", "Startup Story"),
                    ("neo_story", "Neo Story"),
                    ("neo_project", "Neo Project"),
                    ("tech_news", "Tech News"),
                    ("robotics_news", "Robotics News"),
                    ("talk_episode", "Talk Episode"),
                    ("sharxathon", "SharXathon"),
                ],
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="NeoProject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(help_text="Project title", max_length=255)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly version of title",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Brief project description"),
                ),
                (
                    "detailed_description",
                    models.TextField(
                        blank=True, help_text="Detailed project description"
                    ),
                ),
                (
                    "featured_image",
                    models.URLField(blank=True, help_text="Main project image URL"),
                ),
                ("demo_url", models.URLField(blank=True, help_text="Live demo URL")),
                ("video_url", models.URLField(blank=True, help_text="Demo video URL")),
                (
                    "screenshots",
                    models.JSONField(
                        default=list, help_text="Array of screenshot URLs"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("web_development", "Web Development"),
                            ("mobile_app", "Mobile App"),
                            ("ai_ml", "AI/ML"),
                            ("blockchain", "Blockchain"),
                            ("iot", "IoT"),
                            ("robotics", "Robotics"),
                            ("data_science", "Data Science"),
                            ("cybersecurity", "Cybersecurity"),
                            ("cloud_computing", "Cloud Computing"),
                            ("devops", "DevOps"),
                            ("game_development", "Game Development"),
                            ("ar_vr", "AR/VR"),
                            ("fintech", "FinTech"),
                            ("healthtech", "HealthTech"),
                            ("edtech", "EdTech"),
                            ("other", "Other"),
                        ],
                        default="web_development",
                        max_length=50,
                    ),
                ),
                (
                    "technologies",
                    models.CharField(
                        help_text="Comma-separated list of technologies used",
                        max_length=500,
                    ),
                ),
                (
                    "github_url",
                    models.URLField(blank=True, help_text="GitHub repository URL"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("planning", "Planning"),
                            ("in_development", "In Development"),
                            ("beta", "Beta"),
                            ("completed", "Completed"),
                            ("maintained", "Maintained"),
                            ("archived", "Archived"),
                        ],
                        default="in_development",
                        max_length=20,
                    ),
                ),
                (
                    "difficulty_level",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                            ("expert", "Expert"),
                        ],
                        default="intermediate",
                        max_length=20,
                    ),
                ),
                (
                    "features",
                    models.JSONField(default=list, help_text="Array of key features"),
                ),
                (
                    "installation_instructions",
                    models.TextField(
                        blank=True, help_text="How to install/setup the project"
                    ),
                ),
                (
                    "usage_instructions",
                    models.TextField(blank=True, help_text="How to use the project"),
                ),
                (
                    "developer_name",
                    models.CharField(
                        blank=True, help_text="Main developer/team name", max_length=255
                    ),
                ),
                (
                    "developer_email",
                    models.EmailField(
                        blank=True, help_text="Contact email", max_length=254
                    ),
                ),
                (
                    "collaborators",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated list of collaborators",
                        max_length=500,
                    ),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated tags for filtering",
                        max_length=255,
                    ),
                ),
                (
                    "license",
                    models.CharField(
                        blank=True,
                        help_text="Project license (e.g., MIT, GPL)",
                        max_length=100,
                    ),
                ),
                (
                    "version",
                    models.CharField(
                        blank=True, help_text="Current version", max_length=20
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False, help_text="Show as featured project"
                    ),
                ),
                (
                    "is_published",
                    models.BooleanField(
                        default=False, help_text="Make visible to public"
                    ),
                ),
                (
                    "is_open_source",
                    models.BooleanField(
                        default=True, help_text="Is this an open source project?"
                    ),
                ),
                ("views_count", models.IntegerField(default=0)),
                (
                    "stars_count",
                    models.IntegerField(
                        default=0, help_text="GitHub stars or similar rating"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "project_start_date",
                    models.DateField(
                        blank=True, help_text="When the project was started", null=True
                    ),
                ),
                (
                    "project_completion_date",
                    models.DateField(
                        blank=True,
                        help_text="When the project was completed",
                        null=True,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Neo Project",
                "verbose_name_plural": "Neo Projects",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["category", "is_published"],
                        name="authenticat_categor_cc05cd_idx",
                    ),
                    models.Index(
                        fields=["status", "is_featured"],
                        name="authenticat_status_7643dd_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="authenticat_created_88be95_idx"
                    ),
                ],
            },
        ),
    ]

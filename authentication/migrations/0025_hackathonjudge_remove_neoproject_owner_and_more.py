# Generated by Django 5.1.7 on 2025-10-18 12:16

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("authentication", "0024_add_judges_mentors_to_sharxathon"),
    ]

    operations = [
        migrations.CreateModel(
            name="HackathonJudge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Full name of the judge", max_length=255
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        help_text="URL-friendly version of name",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True, help_text="Short biography of the judge"
                    ),
                ),
                (
                    "avatar",
                    models.URLField(blank=True, help_text="Profile picture URL"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, help_text="Contact email", max_length=254
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, help_text="Contact phone number", max_length=20
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, help_text="Location/City, Country", max_length=255
                    ),
                ),
                (
                    "linkedin_url",
                    models.URLField(blank=True, help_text="LinkedIn profile URL"),
                ),
                (
                    "github_url",
                    models.URLField(blank=True, help_text="GitHub profile URL"),
                ),
                (
                    "twitter_url",
                    models.URLField(blank=True, help_text="Twitter/X profile URL"),
                ),
                (
                    "website_url",
                    models.URLField(blank=True, help_text="Personal website URL"),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Professional title (e.g., CTO, Senior Engineer)",
                        max_length=255,
                    ),
                ),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        help_text="Current company/organization",
                        max_length=255,
                    ),
                ),
                (
                    "experience_years",
                    models.IntegerField(
                        blank=True, help_text="Years of experience", null=True
                    ),
                ),
                (
                    "skills",
                    models.JSONField(
                        default=list, help_text="Array of skills/technologies"
                    ),
                ),
                (
                    "expertise_areas",
                    models.JSONField(
                        default=list, help_text="Areas of expertise for judging"
                    ),
                ),
                (
                    "past_judging_experience",
                    models.TextField(
                        blank=True,
                        help_text="Previous hackathons or competitions judged",
                    ),
                ),
                (
                    "preferred_categories",
                    models.JSONField(
                        default=list, help_text="Preferred categories to judge"
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, help_text="Feature this judge"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Is this judge profile active"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Hackathon Judge",
                "verbose_name_plural": "Hackathon Judges",
                "ordering": ["-created_at"],
            },
        ),
        migrations.RemoveField(
            model_name="neoproject",
            name="owner",
        ),
        migrations.AlterField(
            model_name="hackathonmentor",
            name="slug",
            field=models.SlugField(
                blank=True,
                help_text="URL-friendly version of name",
                max_length=255,
                unique=True,
            ),
        ),
        migrations.AddField(
            model_name="sharxathon",
            name="judges",
            field=models.ManyToManyField(
                blank=True,
                help_text="Judges assigned to evaluate this hackathon",
                related_name="hackathons",
                to="authentication.hackathonjudge",
            ),
        ),
        migrations.DeleteModel(
            name="ProjectLink",
        ),
        migrations.DeleteModel(
            name="ProjectOwner",
        ),
    ]
